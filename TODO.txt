### Todo

DONE - Set up scrub table
DONE - Set up listen table
DONE - Set up search class (including DB and ES)
DONE - set up fulltext query for ES
DONE - set up labelmates query
DONE - set up labelmates songs query
DONE - set up queries in search
DONE - set up flask apis
DONE - set up ember frontend
NOT DONE - connect ember to flask
DONE - rewrite everything in rails api
DONE - write json api in rails
DONE - connect rails to ember
DONE - write pages & routes in ember
DONE - connect pages with links
DONE - save tracks to queues
DONE - save multiple tracks to queues
DONE - Figure out pagination and counts for large relations
DONE - User Auth
Sign up new user
Basic queue flow
Add all label & artists tracks to queue
Watch labels and artists and get updates with new releases
Some basic CSS work
Start on filling out ratings scores via jobs in rails
Start on algorithm to suggest tracks based on the similarity to your library
Import itunes library
work out text formatting tags with [] - https://support.discogs.com/hc/en-us/articles/360001568133#format - Maybe work this out on data parsing before db
Activity graph for labels and artists.
User content ideas - sharing tracks / playlists

### DB IMPORT ###
include html text formatting on label contact info and wherever else its found
Include artist alias_artist_id for aliases
Include more ids for resources where found

### ES reindex ###
Elasticsearch for all (important) models

### fresh data ###
Nightly updates from discogs for new releases, labels, etc

### Sales ### 
Amazon links
Beatport links
Itunes links
Spotify

### Streaming ### 
Youtube links
Itunes Music
Discogs

### Release strategy ###
Only open to gigging DJ's at first
No money, everything free
Collect addresses for invites

